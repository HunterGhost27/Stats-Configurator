Version 1
SubGoalCombiner SGC_AND
INITSECTION

//  ====================================================================================================================================
//  |                                                           MOD-MENU                                                               |
//  ====================================================================================================================================

//  ======================================================
//  DB_S7_Config_ModMenu((STRING)_FlagName);
    DB_S7_Config_ModMenu("S7_StatsExportTSV");
    DB_S7_Config_ModMenu("S7_BuildConfigData");
    DB_S7_Config_ModMenu("S7_ToggleConfigLog");
    DB_S7_Config_ModMenu("S7_RefreshSettings");
    DB_S7_Config_ModMenu("S7_PrintModRegistry");
    DB_S7_Config_ModMenu("S7_Config_CHANGELOG");
    DB_S7_Config_ModMenu("S7_StatsConfigurator");
    DB_S7_Config_ModMenu("S7_ToggleSafetyCheck");
    DB_S7_Config_ModMenu("S7_ToggleStatsLoader");
    DB_S7_Config_ModMenu("S7_SetDefaultSettings");
    DB_S7_Config_ModMenu("S7_RebuildCollections");
    DB_S7_Config_ModMenu("S7_BroadcastConfigData");
    DB_S7_Config_ModMenu("S7_ValidateClientConfig");
    DB_S7_Config_ModMenu("S7_ExportCurrentSettings");
    DB_S7_Config_ModMenu("S7_ToggleSyncStatPersistence");
//  ======================================================

KBSECTION

//  ================
//      MOD-MENU
//  ================

IF
GlobalFlagSet(_Signal)                                                                  //  Flag set during ModMenu dialog or GameStart.
AND
DB_S7_Config_ModMenu(_Signal)                                                           //  Fetch FlagName from DB.
THEN
S7_Config_ModMenuRelay(_Signal);                                                        //  Signal Lua.
GlobalClearFlag(_Signal);                                                               //  Clear Flag.

//  =======================================
//      GIVE ITEM TO THE HOST-CHARACTER
//  =======================================

IF
GameStarted(_GameLevel, _)
AND
IsGameLevel(_GameLevel, 1)                                                                                          //  Not in CharacterCreation Level.
AND
CharacterGetHostCharacter(_Character)                                                                               //  Only checks for host-character.
AND
NOT ItemTemplateIsInPartyInventory(_Character, "S7_Config_Inspector_c5959819-25e9-4dbc-ae20-0f6283502254", 1, 1)    //  Host-character's party doesn't already have the configurator.
THEN
ItemTemplateAddTo("S7_Config_Inspector_c5959819-25e9-4dbc-ae20-0f6283502254", _Character, 1);                       //  Add inspector to host-character's inventory.
NRD_ModCall("S7_Config", "S7DebugPrint", "Configurator added to Host-Character's Inventory.", "[ModMenu]");

//=============================
//REGION  START MOD-MENU DIALOG

//  ____________________________________
//  Character Used The Stat-Configurator
//  ************************************

IF                                      
CharacterUsedItemTemplate(_Character, "S7_Config_Inspector_c5959819-25e9-4dbc-ae20-0f6283502254", _)        // Character used configurator.
AND
CharacterGetHostCharacter(_Character)                                                                       //  Only allows the host-character          
AND
QRY_SpeakerIsAvailable(_Character)                                                                          //  Checks whether player can have a dialog.
THEN
Proc_StartDialog(1, "S7_Config_ModMenu", _Character);                                                       //  Starts the Mod-Menu dialog.
NRD_ModCall("S7_Config", "S7DebugPrint", "ModMenu activated by the host-character.", "[ModMenu]");

IF                                      
CharacterUsedItemTemplate(_Character, "S7_Config_Inspector_c5959819-25e9-4dbc-ae20-0f6283502254", _)        // Character used configurator.
AND
NOT CharacterGetHostCharacter(_Character)                                                                   //  Character is not the host.
AND
CharacterGetHostCharacter(_HostCharacter)                                                                   //  Get the host-character.
AND
QRY_SpeakerIsAvailable(_HostCharacter)                                                                      //  Check if host-character is available for dialog.
THEN
NRD_ModCall("S7_Config", "SetDialogVars");
Proc_StartDialog(1, "S7_Config_ModMenu", _HostCharacter);                                                   //  Redirect Mod-Menu dialog to Host-Character.
NRD_ModCall("S7_Config", "S7DebugPrint", "ModMenu activated by Client. Redirecting dialog to Host-Character.", "[ModMenu]");

//END_REGION
//=============================

EXITSECTION

ENDEXITSECTION
ParentTargetEdge "S7__Config_Initializer"
